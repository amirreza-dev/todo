{"version":3,"sources":["components/Task/Todo.jsx","context/todoContext.js","components/Task/Todos.jsx","components/Task/AddNewTask.jsx","containers/App.jsx","containers/GlobalState.jsx","i18n.js","index.js"],"names":["Todo","text","isCompleted","deleted","completed","changed","useState","show","setShow","handleClose","className","onClick","Button","variant","Modal","onHide","Header","closeButton","Body","FormControl","placeholder","onChange","aria-label","aria-describedby","Footer","TodoContext","createContext","todos","todo","createNewTodo","todoInput","changeTodo","completedTodo","deleteTodo","Todos","context","useContext","t","useTranslation","length","map","key","id","event","AddNewTask","onSubmit","e","preventDefault","type","value","App","GlobalState","props","setTodos","getTodo","setTodo","Provider","getTodos","uuidv4","push","toast","success","position","error","target","personIndex","findIndex","c","changing","information","todoIndex","filteredTodos","filter","d","info","children","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","render","document","getElementById"],"mappings":"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","file":"static/js/main.cee0ee41.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Modal, Button, FormControl } from 'react-bootstrap';\r\n\r\nconst Todo = ({ text, isCompleted, deleted, completed, changed }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className={`todo-indicator ${\r\n                    isCompleted ? 'bg-success' : 'bg-warning'\r\n                }`}\r\n            />\r\n            <div className='widget-content p-0'>\r\n                <div className='widget-content-wrapper'>\r\n                    <div className='widget-content-right flex1'>\r\n                        <div className='widget-heading'>\r\n                            {isCompleted ? <del>{text}</del> : text}\r\n                        </div>\r\n                    </div>\r\n                    <div className='widget-content-left'>\r\n                        {' '}\r\n                        <button\r\n                            className='border-0 btn-transition btn btn-outline-success'\r\n                            onClick={completed}\r\n                        >\r\n                            {' '}\r\n                            <i className='fa fa-check' />\r\n                        </button>{' '}\r\n                        <button\r\n                            className='border-0 btn-transition btn btn-outline-danger'\r\n                            onClick={deleted}\r\n                        >\r\n                            {' '}\r\n                            <i className='fa fa-trash' />{' '}\r\n                        </button>{' '}\r\n                        <Button\r\n                            variant='outline-primary'\r\n                            className='border-0 btn-transition'\r\n                            onClick={handleShow}\r\n                        >\r\n                            <i className='fa fa-edit' />\r\n                        </Button>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton />\r\n                            <Modal.Body>\r\n                                <FormControl\r\n                                    placeholder={`تغییر ${text}`}\r\n                                    onChange={changed}\r\n                                    aria-label='Username'\r\n                                    aria-describedby='basic-addon1'\r\n                                />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant='success' onClick={handleClose}>\r\n                                    ذخیره تغییرات\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","import { createContext } from 'react';\r\n\r\nconst TodoContext = createContext({\r\n    todos: [],\r\n    todo: '',\r\n    createNewTodo: () => {},\r\n    todoInput: () => {},\r\n    changeTodo: () => {},\r\n    completedTodo: () => {},\r\n    deleteTodo: () => {},\r\n});\r\n\r\nexport default TodoContext;\r\n","import React, { useContext } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoContext from './../../context/todoContext';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Todos = () => {\r\n    const context = useContext(TodoContext);\r\n    const { todos, deleteTodo, completedTodo, changeTodo } = context;\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <ul className='list-group list-group-flush p-xs'>\r\n            {todos.length > 0 ? (\r\n                todos.map((todo) => (\r\n                    <li key={todo.id} className='list-group-item'>\r\n                        <Todo\r\n                            text={todo.text}\r\n                            isCompleted={todo.completed}\r\n                            deleted={() => deleteTodo(todo.id)}\r\n                            completed={() => completedTodo(todo.id)}\r\n                            changed={(event) => changeTodo(event, todo.id)}\r\n                        />\r\n                    </li>\r\n                ))\r\n            ) : (\r\n                <div className='alert alert-light mt-3 w-75 mx-auto'>\r\n                    <p className='text-center'>{t('Add New Todo')}</p>\r\n                </div>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useContext, useState } from 'react';\r\nimport TodoContext from './../../context/todoContext';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst AddNewTask = () => {\r\n    const context = useContext(TodoContext);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <div className='w-50 mx-auto fixed-bottom mb-5 p-3 wrapper'>\r\n            <form\r\n                className='form-inline justify-content-center'\r\n                onSubmit={(e) => e.preventDefault()}\r\n            >\r\n                <div className='input-group w-100 hidden-xs hidden-sm'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control rounded'\r\n                        placeholder='اضافه کردن کار جدید'\r\n                        value={context.todo}\r\n                        onChange={context.todoInput}\r\n                    />\r\n                    <div className='input-group-prepend'>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn bg-transparent fa fa-plus-square text-light'\r\n                            onClick={context.createNewTodo}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='input-group-prepend hidden-md hidden-lg'>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn bg-transparent fa fa-plus-square text-light'\r\n                        onClick={handleShow}\r\n                    />\r\n                </div>\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton />\r\n                    <Modal.Body>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control rounded'\r\n                            placeholder='اضافه کردن کار جدید'\r\n                            value={context.todo}\r\n                            onChange={context.todoInput}\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={handleClose}>\r\n                            بستن\r\n                        </Button>\r\n                        <Button\r\n                            variant='primary'\r\n                            onClick={context.createNewTodo}\r\n                            className='mr-4'\r\n                        >\r\n                            ثبت کار جدید\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewTask;\r\n","import React, { Fragment } from 'react';\r\nimport Todos from '../components/Task/Todos';\r\nimport AddNewTask from '../components/Task/AddNewTask';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className='d-flex rtl justify-content-center container'>\r\n                <div className='col-md-12'>\r\n                    <div className='card-hover-shadow-2x mb-3 card'>\r\n                        <Todos />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddNewTask />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { ToastContainer, toast } from 'react-toastify';\nimport TodoContext from '../context/todoContext';\n\nconst GlobalState = (props) => {\n    const [todos, setTodos] = useState([]);\n    const [getTodo, setTodo] = useState('');\n\n    const changeTodo = (event, id) => {\n        const getTodos = todos;\n        const personIndex = getTodos.findIndex((c) => c.id === id);\n        const changing = getTodos[personIndex];\n        changing.text = event.target.value;\n        const information = [...getTodos];\n        information[personIndex] = changing;\n        setTodos(information);\n    };\n\n    const createNewTodo = () => {\n        const getTodos = [...todos];\n        const todo = {\n            id: uuidv4(),\n            text: getTodo,\n            completed: false,\n        };\n        if (todo.text !== '' && todo.text !== ' ') {\n            getTodos.push(todo);\n            setTodos(getTodos);\n            setTodo('');\n            toast.success(`${todo.text} یادداشت شد.`, {\n                position: 'top-right',\n            });\n        } else {\n            toast.error('فیلد خالی می باشد!', {\n                position: 'top-right',\n            });\n        }\n    };\n\n    const completedTodo = (id) => {\n        const getTodos = [...todos];\n        const todoIndex = getTodos.findIndex((t) => t.id === id);\n        const todo = getTodos[todoIndex];\n        todo.completed = !todo.completed;\n        getTodos[todoIndex] = todo;\n        setTodos(getTodos);\n    };\n\n    const deleteTodo = (id) => {\n        const getTodos = [...todos];\n        const filteredTodos = getTodos.filter((t) => t.id !== id);\n        setTodos(filteredTodos);\n        const deleted = getTodos.findIndex((d) => d !== d.id);\n        const todo = getTodos[deleted];\n        toast.info(`${todo.text} با موفقیت پاک شد.`, {\n            position: 'top-right',\n        });\n    };\n\n    const todoInput = (event) => {\n        setTodo(event.target.value);\n    };\n\n    return (\n        <TodoContext.Provider\n            value={{\n                todos: todos,\n                todo: getTodo,\n                createNewTodo: createNewTodo,\n                todoInput: todoInput,\n                changeTodo: changeTodo,\n                completedTodo: completedTodo,\n                deleteTodo: deleteTodo,\n            }}\n        >\n            {props.children}\n\n            <ToastContainer />\n        </TodoContext.Provider>\n    );\n};\n\nexport default GlobalState;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\nconst Languages = ['fa', 'en'];\n\ni18n\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n    // learn more: https://github.com/i18next/i18next-http-backend\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: 'en',\n        debug: true,\n        whitelist: Languages,\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    });\n\nexport default i18n;\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './containers/App';\r\nimport GlobalState from './containers/GlobalState';\r\nimport './i18n';\r\n\r\nrender(\r\n    <GlobalState>\r\n        <App />\r\n    </GlobalState>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}