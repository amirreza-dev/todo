{"version":3,"sources":["context/todoContext.js","components/Task/Todo.jsx","components/Task/Todos.jsx","components/Task/AddNewTask.jsx","containers/App.jsx","index.js"],"names":["TodoContext","createContext","todos","todo","createNewTodo","todoInput","completedTodo","deleteTodo","Todo","text","isCompleted","deleted","completed","className","onClick","Todos","context","useContext","length","map","key","id","AddNewTask","onSubmit","e","preventDefault","type","placeholder","value","onChange","App","useState","setTodos","getTodo","setTodo","Provider","getTodos","uuidv4","push","toast","success","position","error","event","target","todoIndex","findIndex","t","filteredTodos","filter","d","info","render","document","getElementById"],"mappings":"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","file":"static/js/main.854b9640.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst TodoContext = createContext({\r\n    todos: [],\r\n    todo: '',\r\n    createNewTodo: () => {},\r\n    todoInput: () => {},\r\n    completedTodo: () => {},\r\n    deleteTodo: () => {},\r\n});\r\n\r\nexport default TodoContext;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Todo = ({ text, isCompleted, deleted, completed }) => {\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className={`todo-indicator ${\r\n                    isCompleted ? 'bg-success' : 'bg-warning'\r\n                }`}\r\n            ></div>\r\n            <div className='widget-content p-0'>\r\n                <div className='widget-content-wrapper'>\r\n                    <div className='widget-content-right flex1'>\r\n                        <div className='widget-heading'>\r\n                            {isCompleted ? <del>{text}</del> : text}\r\n                        </div>\r\n                    </div>\r\n                    <div className='widget-content-left'>\r\n                        {' '}\r\n                        <button\r\n                            className='border-0 btn-transition btn btn-outline-success'\r\n                            onClick={completed}\r\n                        >\r\n                            {' '}\r\n                            <i className='fa fa-check'></i>\r\n                        </button>{' '}\r\n                        <button\r\n                            className='border-0 btn-transition btn btn-outline-danger'\r\n                            onClick={deleted}\r\n                        >\r\n                            {' '}\r\n                            <i className='fa fa-trash'></i>{' '}\r\n                        </button>{' '}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useContext } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoContext from './../../context/todoContext';\r\n\r\nconst Todos = () => {\r\n    const context = useContext(TodoContext);\r\n    const { todos, deleteTodo, completedTodo } = context;\r\n\r\n    return (\r\n        <ul className='list-group list-group-flush'>\r\n            {todos.length > 0 ? (\r\n                todos.map((todo) => (\r\n                    <li key={todo.id} className='list-group-item'>\r\n                        <Todo\r\n                            text={todo.text}\r\n                            isCompleted={todo.completed}\r\n                            deleted={() => deleteTodo(todo.id)}\r\n                            completed={() => completedTodo(todo.id)}\r\n                        />\r\n                    </li>\r\n                ))\r\n            ) : (\r\n                <div className='alert alert-light mt-3 w-75 mx-auto'>\r\n                    <p className='text-center'>\r\n                        هیچ کاری برای امروز ثبت نشده !\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from './../../context/todoContext';\r\n\r\nconst AddNewTask = () => {\r\n    const context = useContext(TodoContext);\r\n\r\n    return (\r\n        <div className='w-50 mx-auto fixed-bottom mb-5 p-3 wrapper'>\r\n            <form\r\n                className='form-inline justify-content-center'\r\n                onSubmit={(e) => e.preventDefault()}\r\n            >\r\n                <div className='input-group w-100'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control rounded'\r\n                        placeholder='اضافه کردن کار جدید'\r\n                        value={context.todo}\r\n                        onChange={context.todoInput}\r\n                    />\r\n                    <div className='input-group-prepend'>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn bg-transparent fa fa-plus-square text-light'\r\n                            onClick={context.createNewTodo}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewTask;\r\n","import React, { useState } from 'react';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport TodoContext from '../context/todoContext';\r\nimport Todos from '../components/Task/Todos';\r\nimport AddNewTask from '../components/Task/AddNewTask';\r\n\r\nconst App = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [getTodo, setTodo] = useState('');\r\n\r\n    const createNewTodo = () => {\r\n        const getTodos = [...todos];\r\n        const todo = {\r\n            id: uuidv4(),\r\n            text: getTodo,\r\n            completed: false,\r\n        };\r\n        if (todo.text !== '' && todo.text !== ' ') {\r\n            getTodos.push(todo);\r\n            setTodos(getTodos);\r\n            setTodo('');\r\n            toast.success(`${todo.text} یادداشت شد.`, {\r\n                position: 'top-right',\r\n            });\r\n        } else {\r\n            toast.error('فیلد خالی می باشد!', {\r\n                position: 'top-right',\r\n            });\r\n        }\r\n    };\r\n\r\n    const completedTodo = (id) => {\r\n        const getTodos = [...todos];\r\n        const todoIndex = getTodos.findIndex((t) => t.id === id);\r\n        const todo = getTodos[todoIndex];\r\n        todo.completed = !todo.completed;\r\n        getTodos[todoIndex] = todo;\r\n        setTodos(getTodos);\r\n    };\r\n\r\n    const deleteTodo = (id) => {\r\n        const getTodos = [...todos];\r\n        const filteredTodos = getTodos.filter((t) => t.id !== id);\r\n        setTodos(filteredTodos);\r\n        const deleted = getTodos.findIndex((d) => d !== d.id);\r\n        const todo = getTodos[deleted];\r\n        toast.info(`${todo.text} با موفقیت پاک شد.`, {\r\n            position: 'top-right',\r\n        });\r\n    };\r\n\r\n    const todoInput = (event) => {\r\n        setTodo(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={{\r\n                todos: todos,\r\n                todo: getTodo,\r\n                createNewTodo: createNewTodo,\r\n                todoInput: todoInput,\r\n                completedTodo: completedTodo,\r\n                deleteTodo: deleteTodo,\r\n            }}\r\n        >\r\n            <div className='d-flex rtl justify-content-center container'>\r\n                <div className='col-md-8 col-sm-12'>\r\n                    <div className='card-hover-shadow-2x mb-3 card'>\r\n                        <Todos />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddNewTask />\r\n            <ToastContainer />\r\n        </TodoContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './containers/App';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}