{"version":3,"sources":["components/Header.jsx","components/Task/Todo.jsx","context/todoContext.js","components/Task/Todos.jsx","components/Task/AddNewTask.jsx","containers/App.jsx","containers/GlobalState.jsx","i18n.js","index.js"],"names":["Header","changeLangs","lang","i18n","changeLanguage","useTranslation","className","for","type","id","name","checked","onClick","width","height","viewBox","cx","cy","r","d","Todo","text","isCompleted","deleted","completed","changed","useState","show","setShow","handleClose","Button","variant","Modal","onHide","closeButton","Body","FormControl","placeholder","onChange","aria-label","aria-describedby","Footer","TodoContext","createContext","todos","todo","createNewTodo","todoInput","changeTodo","completedTodo","deleteTodo","Todos","context","useContext","t","length","map","key","event","AddNewTask","onSubmit","e","preventDefault","value","App","GlobalState","props","setTodos","getTodo","setTodo","Provider","getTodos","uuidv4","push","toast","success","position","error","target","personIndex","findIndex","c","changing","information","todoIndex","filteredTodos","filter","info","children","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.b8c94167.chunk.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Header = () => {\n    const changeLangs = (lang) => {\n        i18n.changeLanguage(lang);\n    };\n\n    const { i18n } = useTranslation();\n\n    return (\n        <div className='m-3 d-flex justify-content-center'>\n            <div className='card w-25'>\n                <div className='card-body'>\n                    <div className='cntr'>\n                        <label for='rdo-1' className='btn-radio'>\n                            <input\n                                type='radio'\n                                id='rdo-1'\n                                name='radio-grp'\n                                checked='checked'\n                                onClick={() => changeLangs('fa')}\n                            />\n                            <svg width='20px' height='20px' viewBox='0 0 20 20'>\n                                <circle cx='10' cy='10' r='9' />\n                                <path\n                                    d='M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z'\n                                    className='inner'\n                                />\n                                <path\n                                    d='M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z'\n                                    className='outer'\n                                />\n                            </svg>\n                            <span>Persian</span>\n                        </label>\n                        <label for='rdo-2' className='btn-radio'>\n                            <input\n                                type='radio'\n                                id='rdo-2'\n                                name='radio-grp'\n                                onClick={() => changeLangs('en')}\n                            />\n                            <svg width='20px' height='20px' viewBox='0 0 20 20'>\n                                <circle cx='10' cy='10' r='9' />\n                                <path\n                                    d='M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z'\n                                    className='inner'\n                                />\n                                <path\n                                    d='M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z'\n                                    className='outer'\n                                />\n                            </svg>\n                            <span>English</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { Fragment, useState } from 'react';\r\nimport { Modal, Button, FormControl } from 'react-bootstrap';\r\n\r\nconst Todo = ({ text, isCompleted, deleted, completed, changed }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className={`todo-indicator ${\r\n                    isCompleted ? 'bg-success' : 'bg-warning'\r\n                }`}\r\n            />\r\n            <div className='widget-content p-0'>\r\n                <div className='widget-content-wrapper'>\r\n                    <div className='widget-content-right flex1'>\r\n                        <div className='widget-heading'>\r\n                            {isCompleted ? <del>{text}</del> : text}\r\n                        </div>\r\n                    </div>\r\n                    <div className='widget-content-left'>\r\n                        {' '}\r\n                        <button\r\n                            className='border-0 btn-transition btn btn-outline-success'\r\n                            onClick={completed}\r\n                        >\r\n                            {' '}\r\n                            <i className='fa fa-check' />\r\n                        </button>{' '}\r\n                        <button\r\n                            className='border-0 btn-transition btn btn-outline-danger'\r\n                            onClick={deleted}\r\n                        >\r\n                            {' '}\r\n                            <i className='fa fa-trash' />{' '}\r\n                        </button>{' '}\r\n                        <Button\r\n                            variant='outline-primary'\r\n                            className='border-0 btn-transition'\r\n                            onClick={handleShow}\r\n                        >\r\n                            <i className='fa fa-edit' />\r\n                        </Button>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton />\r\n                            <Modal.Body>\r\n                                <FormControl\r\n                                    placeholder={`تغییر ${text}`}\r\n                                    onChange={changed}\r\n                                    aria-label='Username'\r\n                                    aria-describedby='basic-addon1'\r\n                                />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant='success' onClick={handleClose}>\r\n                                    ذخیره تغییرات\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","import { createContext } from 'react';\r\n\r\nconst TodoContext = createContext({\r\n    todos: [],\r\n    todo: '',\r\n    createNewTodo: () => {},\r\n    todoInput: () => {},\r\n    changeTodo: () => {},\r\n    completedTodo: () => {},\r\n    deleteTodo: () => {},\r\n});\r\n\r\nexport default TodoContext;\r\n","import React, { useContext } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoContext from './../../context/todoContext';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Todos = () => {\r\n    const context = useContext(TodoContext);\r\n    const { todos, deleteTodo, completedTodo, changeTodo } = context;\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <ul className='list-group list-group-flush p-xs'>\r\n            {todos.length > 0 ? (\r\n                todos.map((todo) => (\r\n                    <li key={todo.id} className='list-group-item'>\r\n                        <Todo\r\n                            text={todo.text}\r\n                            isCompleted={todo.completed}\r\n                            deleted={() => deleteTodo(todo.id)}\r\n                            completed={() => completedTodo(todo.id)}\r\n                            changed={(event) => changeTodo(event, todo.id)}\r\n                        />\r\n                    </li>\r\n                ))\r\n            ) : (\r\n                <div className='alert alert-light mt-3 w-75 mx-auto'>\r\n                    <p className='text-center'>{t('Add New Todo')}</p>\r\n                </div>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useContext, useState } from 'react';\r\nimport TodoContext from './../../context/todoContext';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst AddNewTask = () => {\r\n    const context = useContext(TodoContext);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <div className='w-50 mx-auto fixed-bottom mb-5 p-3 wrapper'>\r\n            <form\r\n                className='form-inline justify-content-center'\r\n                onSubmit={(e) => e.preventDefault()}\r\n            >\r\n                <div className='input-group w-100 hidden-xs hidden-sm'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control rounded'\r\n                        placeholder='اضافه کردن کار جدید'\r\n                        value={context.todo}\r\n                        onChange={context.todoInput}\r\n                    />\r\n                    <div className='input-group-prepend'>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn bg-transparent fa fa-plus-square text-light'\r\n                            onClick={context.createNewTodo}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='input-group-prepend hidden-md hidden-lg'>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn bg-transparent fa fa-plus-square text-light'\r\n                        onClick={handleShow}\r\n                    />\r\n                </div>\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton />\r\n                    <Modal.Body>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control rounded'\r\n                            placeholder='اضافه کردن کار جدید'\r\n                            value={context.todo}\r\n                            onChange={context.todoInput}\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={handleClose}>\r\n                            بستن\r\n                        </Button>\r\n                        <Button\r\n                            variant='primary'\r\n                            onClick={context.createNewTodo}\r\n                            className='mr-4'\r\n                        >\r\n                            ثبت کار جدید\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewTask;\r\n","import React, { Fragment } from 'react';\r\nimport Header from '../components/Header';\r\nimport Todos from '../components/Task/Todos';\r\nimport AddNewTask from '../components/Task/AddNewTask';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className='d-flex rtl justify-content-center container'>\r\n                <div className='col-md-12'>\r\n                    <div className='card-hover-shadow-2x mb-3 card'>\r\n                        <Todos />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddNewTask />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { ToastContainer, toast } from 'react-toastify';\nimport TodoContext from '../context/todoContext';\n\nconst GlobalState = (props) => {\n    const [todos, setTodos] = useState([]);\n    const [getTodo, setTodo] = useState('');\n\n    const changeTodo = (event, id) => {\n        const getTodos = todos;\n        const personIndex = getTodos.findIndex((c) => c.id === id);\n        const changing = getTodos[personIndex];\n        changing.text = event.target.value;\n        const information = [...getTodos];\n        information[personIndex] = changing;\n        setTodos(information);\n    };\n\n    const createNewTodo = () => {\n        const getTodos = [...todos];\n        const todo = {\n            id: uuidv4(),\n            text: getTodo,\n            completed: false,\n        };\n        if (todo.text !== '' && todo.text !== ' ') {\n            getTodos.push(todo);\n            setTodos(getTodos);\n            setTodo('');\n            toast.success(`${todo.text} یادداشت شد.`, {\n                position: 'top-right',\n            });\n        } else {\n            toast.error('فیلد خالی می باشد!', {\n                position: 'top-right',\n            });\n        }\n    };\n\n    const completedTodo = (id) => {\n        const getTodos = [...todos];\n        const todoIndex = getTodos.findIndex((t) => t.id === id);\n        const todo = getTodos[todoIndex];\n        todo.completed = !todo.completed;\n        getTodos[todoIndex] = todo;\n        setTodos(getTodos);\n    };\n\n    const deleteTodo = (id) => {\n        const getTodos = [...todos];\n        const filteredTodos = getTodos.filter((t) => t.id !== id);\n        setTodos(filteredTodos);\n        const deleted = getTodos.findIndex((d) => d !== d.id);\n        const todo = getTodos[deleted];\n        toast.info(`${todo.text} با موفقیت پاک شد.`, {\n            position: 'top-right',\n        });\n    };\n\n    const todoInput = (event) => {\n        setTodo(event.target.value);\n    };\n\n    return (\n        <TodoContext.Provider\n            value={{\n                todos: todos,\n                todo: getTodo,\n                createNewTodo: createNewTodo,\n                todoInput: todoInput,\n                changeTodo: changeTodo,\n                completedTodo: completedTodo,\n                deleteTodo: deleteTodo,\n            }}\n        >\n            {props.children}\n\n            <ToastContainer />\n        </TodoContext.Provider>\n    );\n};\n\nexport default GlobalState;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\nconst Languages = ['fa', 'en'];\n\ni18n\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n    // learn more: https://github.com/i18next/i18next-http-backend\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: 'fa',\n        debug: true,\n        whitelist: Languages,\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './containers/App';\r\nimport GlobalState from './containers/GlobalState';\r\nimport './i18n';\r\n\r\nrender(\r\n    <Suspense fallback='loading'>\r\n        <GlobalState>\r\n            <App />\r\n        </GlobalState>\r\n    </Suspense>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}